NDContentPage.OnToolTipsLoaded({27:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype27\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> DrawArrow { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">If true, an arrow is drawn at the end of the axis. Otherwise no arrow is rendered.</div></div>",28:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype28\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> DrawMarkings { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">If true, the axis will draw markings at positions defined by Markings.</div></div>",29:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype29\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public bool</span> DrawNumbers { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">If DrawMarkings and this value are both true, numbers will be displayed besides the Markings of the axis.&nbsp; The numbers represent the numerical values of the Markings.</div></div>",32:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype32\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public double</span> MarkingLength { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">The length of the markings when rendered.</div></div>",33:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype33\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public double</span>[] Markings { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">An array, that specifies the Markings on the axis. Markings are only displayed if DrawMarkings is true.</div></div>",39:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype39\"><div class=\"CPEntry TClass Current\"><div class=\"CPPrePrototypeLine\"><span class=\"SHMetadata\">[ContentProperty(&quot;Items&quot;)]</span></div><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">ChartSharp.</span>&#8203;LineChart</div></div></div><div class=\"TTSummary\">A WPF Chart Control, that can render line data in different styles. It has far less features than similar software, but is (maybe) easy to setup and use.</div></div>",76:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype76\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public double</span> MaxX { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">The maximal value in the X-Direction. If MaxX &lt;= MinX, an ArgumentException occurs.</div></div>",77:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype77\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public double</span> MaxY { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">The maximal value in the Y-Direction. If MaxY &lt;= MinY, an ArgumentException occurs.</div></div>",81:"<div class=\"NDToolTip TProperty LCSharp\"><div id=\"NDPrototype81\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">public string</span> XLabel { <span class=\"SHKeyword\">get</span>; <span class=\"SHKeyword\">set</span> }</div><div class=\"TTSummary\">The label of the X-Axis. It is only displayed if XLabel is not null and ChartStyle.XAxisStyle is not null.</div></div>"});